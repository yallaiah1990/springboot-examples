server.port=8081

#eureka.client.service-url=http://localhost:9091/eureka
spring.application.name=order-service
eureka.client.serviceUrl.defaultZone:http://localhost:9091/eureka/
eureka.client.fetchRegistry=true
spring.jpa.hibernate.ddl-auto=create
spring.datasource.url=jdbc:mysql://localhost:3306/Order_System?useSSL=false
spring.datasource.username=root
spring.datasource.password=rootuser
spring.kafka.producer.value-serializer=org.springframework.kafka.support.serializer.JsonSerializer
spring.kafka.producer.properties.spring.json.add.type.headers=false
spring.jpa.database-platform=org.hibernate.dialect.MySQL57Dialect
spring.jpa.generate-ddl=true
spring.zipkin.enabled=true
logging.file.name=order.log
#logging.file.path=${logging.path}/order.log

#Config-server details
spring.profiles.active=development
# N.B. this is the default:
spring.cloud.config.uri=http://localhost:8888
management.security.enabled=false
management.endpoints.web.exposure.include=*
#hystrix properties
hystrix.command.createOrderServiceCommand.execution.isolation.thread.timeoutInMilliseconds=3000
hystrix.command.createOrderServiceCommand.circuitBreaker.requestVolumeThreshold=4
hystrix.command.createOrderServiceCommand.circuitBreaker.sleepWindowInMilliseconds=9000
hystrix.command.createOrderServiceCommand.circuitBreaker.errorThresholdPercentage=50

hystrix.command.cancelOrderServiceCommand.execution.isolation.thread.timeoutInMilliseconds=3000
hystrix.command.cancelOrderServiceCommand.circuitBreaker.requestVolumeThreshold=4
hystrix.command.cancelOrderServiceCommand.circuitBreaker.sleepWindowInMilliseconds=9000
hystrix.command.cancelOrderServiceCommand.circuitBreaker.errorThresholdPercentage=50
ping-server.ribbon.listOfServers=localhost:8082,localhost:8095,localhost:8096
ping-server.ribbon.eureka.enabled=true
