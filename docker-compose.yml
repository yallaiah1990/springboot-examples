version: '3'
services:
  customer:
    image: customer:latest
    container_name: customer-service
    build: 
      context: .
      dockerfile: Customer/Dockerfile
    ports:
      - "8085:8085"
    networks: 
      - order-mysql
    depends_on:
      - mysqldb
      - eureka-server
      - zipkin-server
      
  inventory: 
    image: inventory:latest
    container_name: inventory-service
    build: 
     context: .
     dockerfile: Inventory/Dockerfile
    ports: 
      - "8083:8083"
    networks: 
      - order-mysql
    depends_on:
      - mysqldb
      - eureka-server
      - zipkin-server
      
  product: 
    image: product:latest
    container_name: product-service
    build: 
     context: .
     dockerfile: Product/Dockerfile
    ports: 
      - "8082:8082"
    networks: 
      - order-mysql
    depends_on:
      - mysqldb
      - eureka-server
      - zipkin-server
      
  order: 
    image: order:latest
    container_name: order-service
    build: 
     context: .
     dockerfile: Order/Dockerfile
    ports: 
      - "8081:8081"
    networks: 
      - order-mysql
    depends_on:
      - mysqldb
      - eureka-server
      - zipkin-server
      
  zipkin-server: 
    image: zipkin-server:latest
    container_name: zipkin-server
    build: 
     context: .
     dockerfile: zipkin-server/Dockerfile
    ports: 
      - "9411:9411"
    networks: 
      - order-mysql
    depends_on:
      - mysqldb
      - eureka-server
      
  zuul-server: 
    image: zuul-server:latest
    container_name: zuul-server
    build: 
     context: .
     dockerfile: ZuulService/Dockerfile
    ports: 
      - "8086:8086"
    networks: 
      - order-mysql
    depends_on:
      - mysqldb
      - eureka-server
      
      
  eureka-server: 
    image: eureka-server:latest
    container_name: eureka-server
    build: 
     context: .
     dockerfile: OrderEurekaServer/Dockerfile
    ports: 
      - "9091:9091"
    networks: 
      - order-mysql
    depends_on:
      - mysqldb
      
  config-server: 
    image: config-server:latest
    container_name: config-server
    build: 
     context: .
     dockerfile: spring-config-server/Dockerfile
    ports: 
      - "8888:8888"
    networks: 
      - order-mysql
    depends_on:
      - mysqldb
      
  mysqldb: 
    image: mysql:8
    container_name: mysqldb
    restart: always
    networks: 
      - order-mysql
    environment: 
      - MYSQL_ROOT_PASSWORD=root
      - MYSQL_DATABASE=Order_System

networks:
  order-mysql: